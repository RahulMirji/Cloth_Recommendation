name: Dependency Security Scan

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  dependency-audit:
    name: NPM Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Generate audit report
        run: npm audit --json > audit-report.json
        continue-on-error: true
      
      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: audit-report.json
          retention-days: 30
  
  outdated-dependencies:
    name: Check Outdated Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Check outdated packages
        run: npm outdated --json > outdated.json || true
      
      - name: Create issue if outdated
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let outdated = {};
            
            try {
              outdated = JSON.parse(fs.readFileSync('outdated.json', 'utf8'));
            } catch (e) {
              console.log('No outdated packages found');
              return;
            }
            
            if (Object.keys(outdated).length > 0) {
              const packages = Object.keys(outdated).slice(0, 10);
              const body = `## ðŸ“¦ Outdated Dependencies Detected
              
              The following packages have newer versions available:
              
              ${packages.map(pkg => `- **${pkg}**: ${outdated[pkg].current} â†’ ${outdated[pkg].latest}`).join('\n')}
              
              Consider updating these dependencies to get the latest features and security patches.
              
              Run \`npm outdated\` locally to see all outdated packages.`;
              
              // Check if issue already exists
              const issues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                labels: 'dependencies'
              });
              
              const existingIssue = issues.data.find(issue => 
                issue.title.includes('Outdated Dependencies')
              );
              
              if (!existingIssue) {
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: 'ðŸ“¦ Outdated Dependencies Detected',
                  body: body,
                  labels: ['dependencies', 'maintenance']
                });
              }
            }
        continue-on-error: true
