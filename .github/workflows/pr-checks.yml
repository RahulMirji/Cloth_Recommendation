name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  pr-info:
    name: PR Information
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get PR info
        id: pr-info
        run: |
          echo "files_changed=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | wc -l)" >> $GITHUB_OUTPUT
          echo "lines_added=$(git diff --numstat ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | awk '{s+=$1} END {print s}')" >> $GITHUB_OUTPUT
          echo "lines_deleted=$(git diff --numstat ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | awk '{s+=$2} END {print s}')" >> $GITHUB_OUTPUT
      
      - name: Comment PR info
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 📊 Pull Request Statistics
              
              - **Files changed**: ${{ steps.pr-info.outputs.files_changed }}
              - **Lines added**: ${{ steps.pr-info.outputs.lines_added }}
              - **Lines deleted**: ${{ steps.pr-info.outputs.lines_deleted }}
              
              **Automated checks are running...** ⏳`
            })
  
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true
      
      - name: Check for console.log statements
        run: |
          if grep -r "console.log" --include="*.ts" --include="*.tsx" --exclude-dir=node_modules .; then
            echo "⚠️ Warning: console.log statements found"
            exit 0
          fi
        continue-on-error: true
  
  test-coverage:
    name: Test Coverage Report
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run tests with coverage
        run: npm run test:coverage
      
      - name: Generate coverage badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: badges
          generate-branches-badge: true
          generate-summary: true
        continue-on-error: true
      
      - name: Comment test coverage
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let coverage = 'N/A';
            try {
              const summary = fs.readFileSync('./coverage/coverage-summary.json', 'utf8');
              const data = JSON.parse(summary);
              coverage = data.total.lines.pct + '%';
            } catch (e) {
              console.log('Coverage file not found');
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ✅ Test Coverage: ${coverage}
              
              View detailed coverage report in the workflow artifacts.`
            })
        continue-on-error: true
  
  size-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps
          npm rebuild lightningcss --build-from-source || true
      
      - name: Build for web
        run: npx expo export --platform web
        continue-on-error: true
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'
      
      - name: Check bundle size
        run: |
          SIZE=$(du -sh dist/ | cut -f1)
          echo "Bundle size: $SIZE"
          echo "BUNDLE_SIZE=$SIZE" >> $GITHUB_ENV
      
      - name: Comment bundle size
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 📦 Bundle Size: ${process.env.BUNDLE_SIZE}
              
              Make sure the bundle size is reasonable for web deployment.`
            })
        continue-on-error: true
